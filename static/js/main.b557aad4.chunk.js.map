{"version":3,"sources":["components/TerminalContent/TerminalContent.js","components/Terminal/Terminal.js","App.js","reportWebVitals.js","index.js"],"names":["TerminalContent","props","useState","onKeyBtnDown","event","keyCode","inputElement","document","getElementsByTagName","i","length","className","indexOf","mycontents","output","map","out","Object","keys","val","id","placeholder","onKeyUp","onPressed","onChange","onChanged","onKeyDown","autoFocus","useEffect","toClear","getElementById","value","focus","Terminal","command","setCommand","cmdOutput","setcmdOutput","clear","setClear","showContent","cmd","target","toString","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b557aad4.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport './TerminalContent.css'\r\nconst TerminalContent = (props) => {\r\n \r\n    const [disableInput, setDisableInput] = useState(true)\r\n    //props.disable = false\r\n    \r\n    const onKeyBtnDown = (event) => {\r\n        if(event.keyCode == 13){\r\n            let inputElement = document.getElementsByTagName('input')\r\n            for(var i=0; i < inputElement.length; i++){\r\n                if(inputElement[i].className.indexOf('terminal__input')>=0){\r\n                    inputElement[i].className += \" disable__input\";\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    let mycontents = props.output.map(out=>{\r\n        return Object.keys(out).map((val)=> {\r\n           return(\r\n               <div key={val} >\r\n                   {/* <div className=\"terminal__commandArea\">\r\n                       <span className=\"terminal__hostname\">Dzons:~ </span> \r\n                       <input className=\"terminal__input\" placeholder=\"help\" onKeyUp={props.onPressed} onChange={props.onChanged} ></input>\r\n                   </div> */}\r\n\r\n                   <div>\r\n                       {out[val]}\r\n                   </div>\r\n                   <div className=\"terminal__commandArea\">\r\n                       <span className=\"terminal__hostname\">Dzons:~ </span> \r\n                       <input id=\"terminal__inputId\" className={`terminal__input`} placeholder=\"help\" onKeyUp={props.onPressed} onChange={props.onChanged} onKeyDown={onKeyBtnDown} autoFocus></input>\r\n                   </div>\r\n               </div>\r\n           )\r\n           }  \r\n        )\r\n    })\r\n    \r\n    useEffect(()=>{\r\n        if(props.toClear){\r\n            document.getElementById('terminal__inputId').value = ''\r\n            document.getElementById('terminal__inputId').focus()\r\n        }\r\n        \r\n    },[props.toClear])\r\n    \r\n\r\n    return (\r\n         <div className=\"terminal__contents\">\r\n            <div className=\"terminal__commandArea\">\r\n                <span className=\"terminal__hostname\">Dzons:~ </span> \r\n                <input id=\"terminal__inputId\" className={`terminal__input`} placeholder=\"help\" onKeyUp={props.onPressed} onChange={props.onChanged} onKeyDown={onKeyBtnDown} autoFocus ></input>\r\n            </div>\r\n             {\r\n                 mycontents\r\n             }\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TerminalContent","import './Terminal.css'\r\nimport TerminalContent from '../TerminalContent/TerminalContent'\r\nimport { useState, useEffect } from 'react'\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\nconst Terminal = (props) => {\r\n\r\n    const [command, setCommand] = useState('')\r\n    const [cmdOutput, setcmdOutput] = useState([])\r\n    const [clear,setClear] = useState(false)\r\n    let showContent = <div></div>\r\n    let oldCmdOutput = []\r\n    const onKeyPressed = (event) => {\r\n        if(event.keyCode == 13){\r\n            \r\n            switch(command){           \r\n                case 'help':\r\n                    showContent = (\r\n                        <div>\r\n                            <p>getname</p>\r\n                            <p>getaddress</p>\r\n                            <p>getinfo</p>\r\n                            <p>getcv</p>\r\n                            <p>linktree</p>\r\n                            <p>clear</p>\r\n                        </div>\r\n                    )\r\n                    oldCmdOutput = [...cmdOutput]\r\n                    setcmdOutput([...cmdOutput,{\"hep\":showContent}])\r\n                    setClear(false)\r\n                    break\r\n                case 'getname':\r\n                    showContent = (\r\n                        <div>\r\n                            <p>John Sherchan</p>\r\n                        </div>\r\n                    )\r\n                    oldCmdOutput = [...cmdOutput]\r\n                    setcmdOutput([...cmdOutput,{\"getname\":showContent}])\r\n                    setClear(false)\r\n                    break\r\n                case 'getaddress':\r\n                    showContent = (\r\n                        <div>\r\n                            <p>Dhapasi, Tokha, Kathmandu 44600</p>\r\n                            <p>john.sherchan10@gmail.com</p>\r\n                        </div>\r\n                    )\r\n                    oldCmdOutput = [...cmdOutput]\r\n                    setcmdOutput([...cmdOutput,{\"getname\":showContent}])\r\n                    setClear(false)\r\n                    break\r\n                case 'getinfo':\r\n                    showContent = (\r\n                        <div>\r\n                            <p>I am Kathmandu-based cyber-security and reverse engineering expert with </p>\r\n                            <p>skillful expertise in security consulting, auditing, testing and compliance</p>\r\n                            <p> and focuses on solving issues of concern to management in regards to cybersecurity.</p>\r\n                        </div>\r\n                    )\r\n                        \r\n                    oldCmdOutput = [...cmdOutput]\r\n                    setcmdOutput([...cmdOutput,{\"getname\":showContent}])\r\n                    setClear(false)\r\n                    break\r\n                case 'getcv':\r\n                    showContent = (<div><span>wget </span><a href=\"www.info.com\">https</a></div>)\r\n                    oldCmdOutput = [...cmdOutput]\r\n                    setcmdOutput([...cmdOutput,{\"getname\":showContent}])\r\n                    setClear(false)\r\n                    break\r\n                case 'linktree':\r\n                    showContent = (\r\n                        <div>\r\n                            <ul>\r\n                                <li><a href=\"#\">instagram</a></li>\r\n                                <li><a href=\"#\">facebook</a></li>\r\n                                <li><a href=\"#\">linkedin</a></li>\r\n                                <li><a href=\"#\">github</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    )\r\n                    oldCmdOutput = [...cmdOutput]\r\n                    setcmdOutput([...cmdOutput,{\"getname\":showContent}])\r\n                    setClear(false)\r\n                    break\r\n                case 'clear':\r\n                    setcmdOutput([{}])\r\n                    setClear(true)\r\n                    break\r\n                default:\r\n                    showContent = (\r\n                        <div>\r\n                            <p>getname</p>\r\n                            <p>getaddress</p>\r\n                            <p>getinfo</p>\r\n                            <p>getcv</p>\r\n                            <p>linktree</p>\r\n                            <p>clear</p>\r\n                        </div>\r\n                    )\r\n                    oldCmdOutput = [...cmdOutput]\r\n                    setcmdOutput([...cmdOutput,{\"help\":showContent}])\r\n                    setClear(false)\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const onInputValueChanged = (event) =>{\r\n        let cmd = event.target.value.toString()\r\n        setCommand(cmd)\r\n    }\r\n    return (\r\n        // <Aux>\r\n            <div className=\"terminal\">\r\n                <div className=\"terminal__bar\">\r\n                    <CancelRoundedIcon className=\"terminal__cancleBtn\" />\r\n                </div>\r\n                <div className=\"terminal__body\">\r\n                    <TerminalContent onChanged={onInputValueChanged} onPressed={onKeyPressed} output={cmdOutput} toClear={clear}/>\r\n                    \r\n                </div>\r\n            </div>\r\n        //{/* </Aux> */}\r\n       \r\n    )\r\n}\r\n\r\nexport default Terminal","import './App.css';\nimport Terminal from './components/Terminal/Terminal'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Terminal />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}